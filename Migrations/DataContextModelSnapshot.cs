// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vszk.Data;

#nullable disable

namespace vszk.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vszk.Models.CatFuncConnect", b =>
                {
                    b.Property<int>("CatFuncConnectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatFuncConnectID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("FunctionalityID")
                        .HasColumnType("int");

                    b.HasKey("CatFuncConnectID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("FunctionalityID");

                    b.ToTable("CatFuncConnect");
                });

            modelBuilder.Entity("vszk.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<int>("CategoryGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryGroupID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("vszk.Models.CategoryGroup", b =>
                {
                    b.Property<int>("CategoryGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryGroupID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("CategoryGroupID");

                    b.ToTable("CategoryGroup");
                });

            modelBuilder.Entity("vszk.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Location")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Logo_link")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Phone")
                        .HasColumnType("char(12)");

                    b.Property<string>("Website")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("vszk.Models.Compatibility", b =>
                {
                    b.Property<int>("CompatibilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompatibilityID"));

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("CompatibilityID");

                    b.ToTable("Compatibility");
                });

            modelBuilder.Entity("vszk.Models.Functionality", b =>
                {
                    b.Property<int>("FunctionalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FunctionalityID"));

                    b.Property<string>("Funct")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("FunctionalityID");

                    b.ToTable("Functionality");
                });

            modelBuilder.Entity("vszk.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("LanguageID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("vszk.Models.Level", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("LevelID");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("vszk.Models.Modul", b =>
                {
                    b.Property<int>("ModulID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ModulID");

                    b.ToTable("Modul");
                });

            modelBuilder.Entity("vszk.Models.OS", b =>
                {
                    b.Property<int>("OSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OSID"));

                    b.Property<string>("Os")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("OSID");

                    b.ToTable("OS");
                });

            modelBuilder.Entity("vszk.Models.Rating", b =>
                {
                    b.Property<int>("RatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingID"));

                    b.Property<DateTime>("Datumido")
                        .HasColumnType("datetime");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.Property<int>("StarID")
                        .HasColumnType("int");

                    b.Property<int>("TextRatingID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RatingID");

                    b.HasIndex("SoftwareID");

                    b.HasIndex("StarID");

                    b.HasIndex("TextRatingID");

                    b.HasIndex("UserID");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("vszk.Models.Remuneration", b =>
                {
                    b.Property<int>("RemunerationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RemunerationID"));

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("RemunerationID");

                    b.HasIndex("LevelID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("Remuneration");
                });

            modelBuilder.Entity("vszk.Models.Software", b =>
                {
                    b.Property<int>("SoftwareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Introduction_fee")
                        .HasColumnType("int");

                    b.Property<string>("Logo_link")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("SoftwareID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("vszk.Models.SoftwareCompConnect", b =>
                {
                    b.Property<int>("SoftwareCompConnectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareCompConnectID"));

                    b.Property<int>("CompatibilityID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SoftwareCompConnectID");

                    b.HasIndex("CompatibilityID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SoftwareCompConnect");
                });

            modelBuilder.Entity("vszk.Models.SoftwareFunction", b =>
                {
                    b.Property<int>("SoftwareFunctionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareFunctionID"));

                    b.Property<int>("FunctionalityID")
                        .HasColumnType("int");

                    b.Property<bool>("Sfunction")
                        .HasColumnType("bit");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SoftwareFunctionID");

                    b.HasIndex("FunctionalityID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SoftwareFunction");
                });

            modelBuilder.Entity("vszk.Models.SoftwareLangConnect", b =>
                {
                    b.Property<int>("SoftwareLangConnectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareLangConnectID"));

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SoftwareLangConnectID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SoftwareLangConnect");
                });

            modelBuilder.Entity("vszk.Models.SoftwareModulConnect", b =>
                {
                    b.Property<int>("SoftwareModulConnectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareModulConnectID"));

                    b.Property<int>("ModulID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SoftwareModulConnectID");

                    b.HasIndex("ModulID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SoftwareModulConnect");
                });

            modelBuilder.Entity("vszk.Models.SoftwareOSConnect", b =>
                {
                    b.Property<int>("SoftwareOSConnectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareOSConnectID"));

                    b.Property<int>("OSID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SoftwareOSConnectID");

                    b.HasIndex("OSID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SoftwareOSConnect");
                });

            modelBuilder.Entity("vszk.Models.Star", b =>
                {
                    b.Property<int>("StarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StarID"));

                    b.Property<float?>("All")
                        .HasColumnType("real");

                    b.Property<float?>("Characteristic")
                        .HasColumnType("real");

                    b.Property<float?>("Price_value")
                        .HasColumnType("real");

                    b.Property<int?>("Recommendation")
                        .HasColumnType("int");

                    b.Property<float?>("Service")
                        .HasColumnType("real");

                    b.Property<float?>("Simplicity")
                        .HasColumnType("real");

                    b.HasKey("StarID");

                    b.ToTable("Star");
                });

            modelBuilder.Entity("vszk.Models.Support", b =>
                {
                    b.Property<int>("SupportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportID"));

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("SupportID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("Support");
                });

            modelBuilder.Entity("vszk.Models.TextRating", b =>
                {
                    b.Property<int>("TextRatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextRatingID"));

                    b.Property<string>("All")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Duration_of_use")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Negative")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Positive")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Reason_of_use")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("TextRatingID");

                    b.ToTable("TextRating");
                });

            modelBuilder.Entity("vszk.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Country")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Settlement")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("vszk.Models.CatFuncConnect", b =>
                {
                    b.HasOne("vszk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Functionality", "Functionality")
                        .WithMany()
                        .HasForeignKey("FunctionalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Functionality");
                });

            modelBuilder.Entity("vszk.Models.Category", b =>
                {
                    b.HasOne("vszk.Models.CategoryGroup", "CategoryGroup")
                        .WithMany()
                        .HasForeignKey("CategoryGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryGroup");
                });

            modelBuilder.Entity("vszk.Models.Rating", b =>
                {
                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Star", "Star")
                        .WithMany()
                        .HasForeignKey("StarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.TextRating", "TextRating")
                        .WithMany()
                        .HasForeignKey("TextRatingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Software");

                    b.Navigation("Star");

                    b.Navigation("TextRating");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vszk.Models.Remuneration", b =>
                {
                    b.HasOne("vszk.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.Software", b =>
                {
                    b.HasOne("vszk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("vszk.Models.SoftwareCompConnect", b =>
                {
                    b.HasOne("vszk.Models.Compatibility", "Compatibility")
                        .WithMany()
                        .HasForeignKey("CompatibilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compatibility");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.SoftwareFunction", b =>
                {
                    b.HasOne("vszk.Models.Functionality", "Functionality")
                        .WithMany()
                        .HasForeignKey("FunctionalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Functionality");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.SoftwareLangConnect", b =>
                {
                    b.HasOne("vszk.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.SoftwareModulConnect", b =>
                {
                    b.HasOne("vszk.Models.Modul", "Modul")
                        .WithMany()
                        .HasForeignKey("ModulID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modul");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.SoftwareOSConnect", b =>
                {
                    b.HasOne("vszk.Models.OS", "OS")
                        .WithMany()
                        .HasForeignKey("OSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OS");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("vszk.Models.Support", b =>
                {
                    b.HasOne("vszk.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vszk.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Software");
                });
#pragma warning restore 612, 618
        }
    }
}
